<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    
    <!-- The runtime identifier causes the build system to copy needed native libraries to the output folder -->
    <PlatformTarget>x64</PlatformTarget>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>

    <PackageId>$(AssemblyName)</PackageId>
    <Description>Allows to use Stride as library in VL.</Description>
  </PropertyGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\..\VL.Stride.DefaultAssets\VL.Stride.DefaultAssets.csproj" />
    <ProjectReference Include="..\..\VL.Stride.Windows\src\VL.Stride.Windows.csproj" />
    <ProjectReference Include="..\..\VL.Stride.Runtime\src\VL.Stride.Runtime.csproj" />
    <ProjectReference Include="..\..\StrideLiveEditor\StrideLiveEditor\StrideLiveEditor.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>
  
  <ItemGroup Condition="'$(InPrivateRepo)' == 'true'">
    <ProjectReference Include="..\..\..\..\..\vvvv50\VL.Lang\src\VL.Lang.csproj" />
  </ItemGroup>
  <ItemGroup Condition="'$(InPrivateRepo)' != 'true'">
    <PackageReference Include="VL.Lang" Version="$(VLVersion)" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Update="Nerdbank.GitVersioning" Version="2.3.186">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  
  <ItemGroup>
    <None Include="..\*.vl" Pack="true" PackagePath=" " />
    <!-- Setting AutoGen metadata is a hack to avoid getting picked up by asset compiler -->
    <None Include="..\help\**\*" Pack="true" AutoGen="false" PackagePath="help\%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>

  <!-- The following propertie and targets are only active if we're building outside of our main solution -->
  <PropertyGroup Condition="'$(InPrivateRepo)' != 'true'">
    <!-- We need to pass the folder containing the native libraries to Stride (NativeLibrary.PreloadLib) - they're normally beside the exe  -->
    <__OutputPath__>$(MsBuildThisFileDirectory)bin\$(Configuration)\$(TargetFramework)</__OutputPath__>
    <NativeLibraryPath>$(__OutputPath__)\x64</NativeLibraryPath>
    <WorkingDirectory>$(__OutputPath__)</WorkingDirectory>

    <!-- Triggers stride asset compiler -->
    <StrideIsExecutable>true</StrideIsExecutable>
    <!-- Stride looks for asset database below the exe -->
    <StrideCompileAssetOutputPath>$(VVVV_BinPath)lib\data</StrideCompileAssetOutputPath>
  </PropertyGroup>

  <!-- As long as VL doesn't understand package restore put whole build output into the package -->
  <Target Name="CollectRuntimeOutputs" BeforeTargets="_GetPackageFiles" Condition="'$(InPrivateRepo)' != 'true'">
    <!-- Collect these items inside a target that runs after build but before packaging. -->
    <ItemGroup>
      <Content Include="$(OutputPath)\*.dll">
        <Pack>true</Pack>
        <PackagePath>lib\$(TargetFramework)</PackagePath>
      </Content>
    </ItemGroup>
  </Target>
</Project>